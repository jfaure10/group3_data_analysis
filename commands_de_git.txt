Esta gu√≠a contiene los comandos de Git m√°s comunes que se usar√°n en el proyecto. Los comandos cubren funciones t√≠picas como crear una rama local, hacer push a una rama espec√≠fica, usar git fetch y git pull, hacer merge de ramas, y m√°s.
________________________________________
1. Crear una rama local
Para crear una nueva rama local, usa el siguiente comando:
git checkout -b <nombre-de-rama>
Este comando crea una nueva rama y cambia a ella. Reemplaza <nombre-de-rama> con el nombre que desees para la nueva rama.
________________________________________
2. Especificar a qu√© rama hacer push
Para enviar los cambios a una rama espec√≠fica en el repositorio remoto, usa:
git push origin <nombre-de-rama>
Reemplaza <nombre-de-rama> con el nombre de la rama deseada.
________________________________________
3. Usar git fetch y git pull
‚Ä¢	git fetch: Trae los √∫ltimos cambios del repositorio remoto, pero no modifica tu rama local.
git fetch origin
‚Ä¢	git pull: Trae los √∫ltimos cambios del repositorio remoto y trata de combinarlos con tu rama local.
git pull origin <nombre-de-rama>
________________________________________
4. Combinar ramas locales (merge)
Para combinar una rama local dentro de otra:
1.	Cambia a la rama de destino:
git checkout <nombre-de-rama>
2.	Realiza el merge de la otra rama:
git merge <rama-a-combinar>
________________________________________
5. Preparar cambios (staging)
Para agregar cambios al √°rea de preparaci√≥n (staging):
‚Ä¢	Para un archivo espec√≠fico:
git add <nombre-de-archivo>
‚Ä¢	Para todos los cambios:
git add .
________________________________________
6. Ver ramas existentes
‚Ä¢	Para ver las ramas locales:
git branch
‚Ä¢	Para ver ramas locales y remotas:
git branch -a
________________________________________
7. Guardar cambios temporalmente (stash)
‚Ä¢	Para guardar cambios sin hacer commit:
git stash
‚Ä¢	Para recuperar los cambios guardados:
git stash pop
________________________________________
8. Eliminar una rama
‚Ä¢	Para eliminar una rama local:
git branch -d <nombre-de-rama>
‚Ä¢	Para eliminar una rama remota:
¬°NUNCA ELIMINES REMOTE DEV NI REMOTE MAIN!
git push origin --delete <nombre-de-rama>
________________________________________
üîÅ Recomendaci√≥n importante
¬°Siempre usa git pull y git fetch antes de trabajar en una rama, para asegurarte de tener los √∫ltimos cambios!
